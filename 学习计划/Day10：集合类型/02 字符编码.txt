ASCII表
    1、只支持英文字符串
    2、采用8位二进制对应一个英文字符串
GBK表：
    1、支持中文、英文字符
    2、采用8位（8 bit = 1 Bytes）二进制对应一个英文字符串
       采用16位（16 bit = 2 Bytes）二进制对应一个中文字符串

Unicode：
    1、
        兼容万国字符的编码表
        与万国字符都要有对应关系

    2、采用16位（16 bit = 2 Bytes）二进制数对应一个中文字符串
    个别生僻字会采用4 Bytes、 8 Bytes

    Unicode表：

                                    内存
        人类的字符  ---------------Unicode格式的数字


utf-8:
    En  --->  1 Bytes
    Cn  --->  3 Bytes




结论：
    1、内存固定使用Unicode，我们可以改变的是存入硬盘采用格式
    英文+中文 -----> Unicode -----> GBK
    英文+日文 -----> Unicode -----> Shift-JIS
    万国字符  -----> Unicode -----> utf-8
    2、文本文件存取乱码问题
        存乱了：解决方法是编码格式应该设置成支持文件内字符串的格式
        取乱了：解决方法是重新换个编码来读取即可
    3、python解释器默认都文件的方式
            python3 默认编码方式：utf-8
            python2 默认编码方式：ASCII

                指定文件头修改默认的编码：
                在python文件的首行写：
                    # coding:XXX
    4、保证运行python程序前两个阶段不乱码的核心发展：
        指定文件头
        # coding：文件当初存入硬盘时所采用的的编码方式
    5、
        python3的str类型默认直接存成Unicode格式，无乱如何都不会乱码
        保证python2的str类型不乱码：前面加个 u
            x=u'上'
    6、了解

        python2解释器有2中字符串类型：str、Unicode
            # str类型
            x='上'   #字符串会按照文件头指定的编码格式存入变量值的存储空间
            # Unicode类型
            x=u'上'


